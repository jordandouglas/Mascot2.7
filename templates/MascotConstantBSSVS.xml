<beast version='2.0'
       namespace='beast.app.beauti:beast.core:beast.evolution.branchratemodel:beast.evolution.speciation:beast.evolution.tree.coalescent:beast.core.util:beast.evolution.nuc:beast.evolution.operators:beast.evolution.sitemodel:beast.evolution.substitutionmodel:beast.evolution.likelihood:beast.evolution:beast.math.distributions'>
       <mergewith point='misc'>
         <fragment id='MascotConstantBSSVSParameters' spec="beast.app.beauti.Fragment">
             <![CDATA[
             <prior id='$(thisparam)ConstantBSSVSPrior.t:$(n)' x='@$(thisparam)ConstantBSSVS.t:$(n)'>
               <distr spec="beast.math.distributions.Exponential" mean='1'/>
             </prior>
             <operator id='$(thisparam)ConstantBSSVSScaler.t:$(n)' spec='ScaleOperator' scaleFactor="0.75" weight="3" parameter="@$(thisparam)ConstantBSSVS.t:$(n)"/>
             ]]>

             <connect srcID='$(thisparam)ConstantBSSVS.t:$(n)' targetID='state' inputName='stateNode'
                      if='inposterior(Mascot.t:$(n))
                      and inposterior(Tree.t:$(n))
                      and inposterior($(thisparam)ConstantBSSVS.t:$(n))
                      and inposterior(ConstantBSSVS.t:$(n))
                      and $(thisparam)ConstantBSSVS.t:$(n)/estimate=true'/>
            <connect srcID='$(thisparam)ConstantBSSVSPrior.t:$(n)' targetID='prior' inputName='distribution'
                     if='inposterior(Mascot.t:$(n))
                     and inposterior(Tree.t:$(n))
                     and inposterior($(thisparam)ConstantBSSVS.t:$(n))
                     and inposterior(ConstantBSSVS.t:$(n))
                     and $(thisparam)ConstantBSSVS.t:$(n)/estimate=true'/>
           <connect srcID='$(thisparam)ConstantBSSVSScaler.t:$(n)' targetID='mcmc' inputName='operator'
                    if='inposterior(Mascot.t:$(n))
                    and inposterior(Tree.t:$(n))
                    and inposterior($(thisparam)ConstantBSSVS.t:$(n))
                    and inposterior(ConstantBSSVS.t:$(n))
                    and $(thisparam)ConstantBSSVS.t:$(n)/estimate=true'/>
         </fragment>
       </mergewith>


    <!-- tree priors -->
    <mergewith point='treePriorTemplates'>
      <subtemplate id='ConstantBSSVS' class='beast.mascot.dynamics.ConstantBSSVS' mainid='ConstantBSSVS.t:$(n)'
        suppressInputs=""
        inlineInputs="beast.mascot.distribution.Mascot.dynamics">
          <![CDATA[

            <dynamics spec="beast.mascot.dynamics.ConstantBSSVS" id="ConstantBSSVS.t:$(n)" dimension="-1">
                <Ne idref='NeConstantBSSVS.t:$(n)'/>
                <backwardsMigration idref='relativeMigrationRatesConstantBSSVS.t:$(n)'/>
                <migrationClock idref='migrationClockConstantBSSVS.t:$(n)'/>
                <indicators idref='indicatorsConstantBSSVS.t:$(n)'/>
                <typeTrait id="typeTraitSet.t:$(n)" spec="mascot.util.InitializedTraitSet" traitname="type">
                    <taxa spec="beast.evolution.alignment.TaxonSet" alignment="@$(n)"/>
                </typeTrait>
            </dynamics>

          <param id="NeConstantBSSVS.t:$(n)" spec="beast.core.parameter.RealParameter" value="1.0" lower="0.0" estimate="true"/>
          <param id="relativeMigrationRatesConstantBSSVS.t:$(n)" spec="beast.core.parameter.RealParameter" value="1.0" lower="0.0" estimate="true"/>
          <param id="migrationClockConstantBSSVS.t:$(n)" spec="beast.core.parameter.RealParameter" value="1.0" lower="0.0" estimate="true"/>


          <param id="indicatorsConstantBSSVS.t:$(n)" spec="beast.core.parameter.BooleanParameter" value="true" estimate="true"/>


          <prior id="nonZeroRatePrior.t:$(n)">
            <x id="sumNonZeroRates.t:$(n)" spec="util.Sum">
                <arg idref="indicatorsConstantBSSVS.t:$(n)"/>
            </x>
            <distr spec="beast.math.distributions.Poisson" lambda='1' offset="1"/>
          </prior>

          <scale id="indicatorFlip.t:$(n)" spec="BitFlipOperator" parameter="@indicatorsConstantBSSVS.t:$(n)" weight="3"/>

      ]]>

      <plate fragment="MascotConstantBSSVSParameters" var="thisparam" range="relativeMigrationRates,migrationClock,Ne"/>

      <connect srcID='indicatorsConstantBSSVS.t:$(n)' targetID='state' inputName='stateNode'
               if='inposterior(Mascot.t:$(n))
               and inposterior(Tree.t:$(n))
               and inposterior(indicatorsConstantBSSVS.t:$(n))
               and inposterior(ConstantBSSVS.t:$(n))
               and indicatorsConstantBSSVS.t:$(n)/estimate=true'/>
     <connect srcID='nonZeroRatePrior.t:$(n)' targetID='prior' inputName='distribution'
              if='inposterior(Mascot.t:$(n))
              and inposterior(Tree.t:$(n))
              and inposterior(indicatorsConstantBSSVS.t:$(n))
              and inposterior(ConstantBSSVS.t:$(n))
              and indicatorsConstantBSSVS.t:$(n)/estimate=true'/>
    <connect srcID='indicatorFlip.t:$(n)' targetID='mcmc' inputName='operator'
             if='inposterior(Mascot.t:$(n))
             and inposterior(Tree.t:$(n))
             and inposterior(indicatorsConstantBSSVS.t:$(n))
             and inposterior(ConstantBSSVS.t:$(n))
             and indicatorsConstantBSSVS.t:$(n)/estimate=true'/>
     <connect srcID="ConstantBSSVS.t:$(n)" targetID="tracelog" inputName="log"
            if="inposterior(Mascot.t:$(n))
            and inposterior(ConstantBSSVS.t:$(n))
            and inposterior(Tree.t:$(n))"/>
      <connect srcID='sumNonZeroRates.t:$(n)' targetID='tracelog' inputName='log'
             if='inposterior(Mascot.t:$(n))
             and inposterior(Tree.t:$(n))
             and inposterior(indicatorsConstantBSSVS.t:$(n))
             and inposterior(ConstantBSSVS.t:$(n))
             and indicatorsConstantBSSVS.t:$(n)/estimate=true'/>






    </subtemplate>


    </mergewith>
</beast>
